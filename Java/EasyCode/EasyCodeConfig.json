{
  "author" : "Spike_Zhang",
  "version" : "1.2.8",
  "userSecure" : "",
  "currTypeMapperGroupName" : "Default",
  "currTemplateGroupName" : "Kaadas-toB",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "Default",
  "typeMapper" : { },
  "template" : {
    "Kaadas-toB" : {
      "name" : "Kaadas-toB",
      "elementList" : [ {
        "name" : "dto.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"DTO\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($!tableInfo.name)/api/backend/dto\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.$!tool.firstLowerCase($!tableInfo.name).#{end}api.backend.dto;\n\nimport java.io.Serializable;\nimport io.swagger.annotations.ApiModelProperty;\nimport io.swagger.annotations.ApiOperation;\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport java.util.Date;\n\n/**\n * @ClassName $!{tableInfo.name}DTO\n * @Description\n * $!{tableInfo.name}\n * @Author $!author\n * @DATE $!time.currTime()\n * @Version 1.0\n */\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@Builder\n@ApiOperation(value = \"$!{tableInfo.name}数据传输对象\")\npublic class $!{tableInfo.name}DTO {\n\n#foreach($column in $tableInfo.fullColumn)\n    #if(${column.comment})  \n    /**\n     * ${column.comment}\n     */\n    @ApiModelProperty(value = \"${column.comment}\")\n    #end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    \n#end\n}\n"
      }, {
        "name" : "fegin.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Api\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($!tableInfo.name)/api/backend\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.$!tool.firstLowerCase($!tableInfo.name).#{end}api.backend;\n\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.api.backend.dto.$!{tableInfo.name}DTO;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.cloud.openfeign.FeignClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n/**\n * @ClassName $!{tableInfo.name}Api\n * @Description\n * $!{tableInfo.comment} 后端Api\n * @Author $!author\n * @DATE $!time.currTime()\n * @Version 1.0.0\n */\n@Api(tags = \"$!{tableInfo.comment} Backend Controller\")\n@FeignClient(name = \"open-client-server\", contextId = \"client\")\npublic interface $!{tableName} {\n\n    @ApiOperation(value = \"通过主键查询单条数据\")\n    @GetMapping(\"/v1/$!{tool.firstLowerCase($!tableInfo.name)}/backend/{id}\")\n    $!{tableInfo.name}DTO detail(@PathVariable(\"id\") $!pk.shortType id);\n\n    @ApiOperation(value = \"创建第三方平台应用\")\n    @PostMapping(\"/v1/$!{tool.firstLowerCase($!tableInfo.name)}/backend\")\n    $!{tableInfo.name}DTO create(@RequestBody $!{tableInfo.name}DTO $!{tool.firstLowerCase($tableInfo.name)}DTO);\n\n    @ApiOperation(value = \"编辑数据\")\n    @PutMapping(\"/v1/$!{tool.firstLowerCase($!tableInfo.name)}/backend\")\n    $!{tableInfo.name}DTO update(@RequestBody $!{tableInfo.name}DTO $!{tool.firstLowerCase($tableInfo.name)}DTO);\n\n    @ApiOperation(value = \"删除数据\")\n    @DeleteMapping(\"/v1/$!{tool.firstLowerCase($!tableInfo.name)}/backend/{id}\")\n    Boolean delete(@PathVariable(\"id\") $!pk.shortType id);\n}\n"
      }, {
        "name" : "controller-backend.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"BackendController\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($!tableInfo.name)/api/backend\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.$!tool.firstLowerCase($!tableInfo.name).#{end}api.backend;\n\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.api.backend.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.application.query.$!{tableInfo.name}QueryService;\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.application.command.$!{tableInfo.name}CommandService;\nimport org.springframework.web.bind.annotation.*;\nimport javax.annotation.Resource;\n\nimport java.util.List;\n\n\n@RestController\npublic class $!{tableName} implements $!{tableInfo.name}Api {\n\n    /**\n     * 查询\n     */\n    @Resource\n    private $!{tableInfo.name}QueryService $!{tool.firstLowerCase($!tableInfo.name)}QueryService;\n    \n    /**\n     * 指令\n     */\n    @Resource\n    private $!{tableInfo.name}CommandService $!{tool.firstLowerCase($!tableInfo.name)}CommandService;\n\n    /**\n     * 通过主键查询单条数据\n     *\n     * @param id 主键\n     * @return 单条数据\n     */\n    public $!{tableInfo.name}DTO detail($!pk.shortType id) {\n        return $!{tool.firstLowerCase($!tableInfo.name)}QueryService.detail(id);\n    }\n\n    /**\n     * 新增数据\n     *\n     * @param $!{tool.firstLowerCase($tableInfo.name)}DTO 实体\n     * @return 新增结果\n     */\n    public $!{tableInfo.name}DTO create($!{tableInfo.name}DTO $!{tool.firstLowerCase($tableInfo.name)}DTO){\n        return $!{tool.firstLowerCase($!tableInfo.name)}CommandService.create($!{tool.firstLowerCase($tableInfo.name)}DTO);\n    }\n\n    /**\n     * 编辑数据\n     *\n     * @param $!{tool.firstLowerCase($tableInfo.name)}DTO 实体\n     * @return 编辑结果\n     */\n    public $!{tableInfo.name}DTO update($!{tableInfo.name}DTO $!{tool.firstLowerCase($tableInfo.name)}DTO){\n        return $!{tool.firstLowerCase($!tableInfo.name)}CommandService.update($!{tool.firstLowerCase($tableInfo.name)}DTO);\n    }\n\n    /**\n     * 删除数据\n     *\n     * @param id 主键\n     * @return 删除是否成功\n     */\n    public Boolean delete($!pk.shortType id){\n        return $!{tool.firstLowerCase($!tableInfo.name)}CommandService.delete(id);\n    }\n}\n"
      }, {
        "name" : "controller-frontend.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"FrontendController\"))\n#set($queryService = $tool.append($tableInfo.name, \"QueryService\"))\n#set($commandService = $tool.append($tableInfo.name, \"CommandService\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($!tableInfo.name)/api/frontend\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.$!tool.firstLowerCase($!tableInfo.name).#{end}api.frontend;\n\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.api.frontend.vo.$!{tableInfo.name}Req;\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.api.frontend.vo.$!{tableInfo.name}Resp;\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.application.query.$!{tableInfo.name}QueryService;\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.application.command.$!{tableInfo.name}CommandService;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.*;\nimport javax.annotation.Resource;\nimport lombok.extern.slf4j.Slf4j;\nimport com.kaadas.common.api.response.BaseResponse;\nimport org.springframework.http.HttpStatus;\n\nimport java.util.List;\n\n@Slf4j\n@Api(tags = \"$!{tableInfo.comment} Frontend Controller\")\n@RestController\n@RequestMapping(\"/v1/$!{tool.firstLowerCase($!tableInfo.name)}/frontend\")\npublic class $!{tableName} {\n\n    /**\n     * 查询\n     */\n    @Resource\n    private $!{queryService} $!{tool.firstLowerCase($!queryService)};\n    \n    /**\n     * 指令\n     */\n    @Resource\n    private $!{commandService} $!{tool.firstLowerCase($!commandService)};\n\n    @ApiOperation(value = \"通过主键查询单条数据\")\n    @GetMapping(\"/{id}\")\n    public BaseResponse<$!{tableInfo.name}Resp> detail(@PathVariable(\"id\") $!pk.shortType id) {\n        return BaseResponse.success($!{tool.firstLowerCase($!tableInfo.name)}QueryService.detail(id));\n    }\n\n    @ApiOperation(value = \"创建第三方平台应用\")\n    @ResponseStatus(HttpStatus.CREATED)\n    @PostMapping\n    public BaseResponse<$!{tableInfo.name}Resp> create(@RequestBody $!{tableInfo.name}Req $!{tool.firstLowerCase($tableInfo.name)}Req){\n        return BaseResponse.success($!{tool.firstLowerCase($!tableInfo.name)}CommandService.create($!{tool.firstLowerCase($tableInfo.name)}Req));\n    }\n\n    @ApiOperation(value = \"编辑数据\")\n    @PutMapping\n    public BaseResponse<$!{tableInfo.name}Resp> update(@RequestBody $!{tableInfo.name}Req $!{tool.firstLowerCase($tableInfo.name)}Req){\n        return BaseResponse.success($!{tool.firstLowerCase($!tableInfo.name)}CommandService.update($!{tool.firstLowerCase($tableInfo.name)}Req));\n    }\n\n    @ApiOperation(value = \"删除数据\")\n    @DeleteMapping(\"/{id}\")\n    public BaseResponse<Boolean> delete(@PathVariable(\"id\") $!pk.shortType id){\n        return BaseResponse.success($!{tool.firstLowerCase($!tableInfo.name)}CommandService.delete(id));\n    }\n}\n"
      }, {
        "name" : "mapper.xml.vm",
        "code" : "##引入mybatis支持\n$!{mybatisSupport.vm}\n\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"Mapper.xml\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($!tableInfo.name)/domain/repository/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.domain.repository.mapper.$!{tableInfo.name}Mapper\">\n\n    <resultMap type=\"$!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.domain.$!{tableInfo.name}\" id=\"$!{tableInfo.name}Map\">\n#foreach($column in $tableInfo.fullColumn)\n        <result property=\"$!column.name\" column=\"$!column.obj.name\" jdbcType=\"$!column.ext.jdbcType\"/>\n#end\n    </resultMap>\n\n    <!-- 批量插入 -->\n    <insert id=\"insertBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n        (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)\n        </foreach>\n    </insert>\n    <!-- 批量插入或按主键更新 -->\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"$!pk.name\" useGeneratedKeys=\"true\">\n        insert into $!{tableInfo.obj.parent.name}.$!{tableInfo.obj.name}(#foreach($column in $tableInfo.otherColumn)$!column.obj.name#if($velocityHasNext), #end#end)\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            (#foreach($column in $tableInfo.otherColumn)#{entity.$!{column.name}}#if($velocityHasNext), #end#end)\n        </foreach>\n        on duplicate key update\n         #foreach($column in $tableInfo.otherColumn)$!column.obj.name = values($!column.obj.name) #if($velocityHasNext), #end#end\n    </insert>\n\n</mapper>\n"
      }, {
        "name" : "mapper.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Mapper\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($!tableInfo.name)/domain/repository/mapper\"))\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.$!tool.firstLowerCase($!tableInfo.name).#{end}domain.repository.mapper;\n\n\nimport java.util.List;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.apache.ibatis.annotations.Mapper;\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.domain.$!{tableInfo.name};\n\n/**\n * @ClassName $!{tableName}\n * @Description\n * $!{tableInfo.comment} 表数据库访问层\n * @Author $!author\n * @DATE $!time.currTime()\n * @Version 1.0.0\n */\n@Mapper\npublic interface $!{tableName} extends BaseMapper<$!tableInfo.name> {\n\n    /**\n    * 批量新增数据（MyBatis原生foreach方法）\n    *\n    * @param entities List<$!{tableInfo.name}> 实例对象列表\n    * @return 影响行数\n    */\n    int insertBatch(@Param(\"entities\") List<$!{tableInfo.name}> entities);\n    \n    /**\n    * 批量新增或按主键更新数据（MyBatis原生foreach方法）\n    *\n    * @param entities List<$!{tableInfo.name}> 实例对象列表\n    * @return 影响行数\n    * @throws org.springframework.jdbc.BadSqlGrammarException 入参是空List的时候会抛SQL语句错误的异常，请自行校验入参\n    */\n    int insertOrUpdateBatch(@Param(\"entities\") List<$!{tableInfo.name}> entities);\n\n}\n"
      }, {
        "name" : "domain.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##保存文件（宏定义）\n#save(\"/$!tool.firstLowerCase($!tableInfo.name)/domain\", \".java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"$!{tool.firstLowerCase($!tableInfo.name)}.domain\")\n\nimport com.baomidou.mybatisplus.annotation.*;\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport java.io.Serializable;\nimport java.util.Date;\n\n#tableComment(\"实体\")\n@Data\n@TableName(\"$!{tableInfo.obj.name}\")\n@Builder\n@AllArgsConstructor\n@NoArgsConstructor\npublic class $!{tableInfo.name} implements Serializable {\n\n#foreach($column in $tableInfo.pkColumn)\n    /**\n     *主键\n     */\n    @TableId(type = IdType.ASSIGN_ID)\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    #break\n#end\n#foreach($column in $tableInfo.otherColumn)\n\n    #if(${column.comment})  \n    /**\n     * ${column.comment}\n     */\n    #end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n\n}\n"
      }, {
        "name" : "repository.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Repository\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($!tableInfo.name)/domain/repository\"))\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.$!tool.firstLowerCase($!tableInfo.name).#{end}domain.repository;\n\n\nimport java.util.List;\n\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.domain.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.domain.repository.mapper.$!{tableInfo.name}Mapper;\nimport org.springframework.stereotype.Repository;\nimport lombok.extern.slf4j.Slf4j;\n\n##表注释（宏定义）\n#tableComment(\"仓储层\")\n@Slf4j\n@Repository\npublic class $!{tableName} extends ServiceImpl<$!{tableInfo.name}Mapper, $!{tableInfo.name}> implements IService<$!{tableInfo.name}> {\n\n}\n"
      }, {
        "name" : "service-query.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##保存文件（宏定义）\n#save(\"/$!tool.firstLowerCase($!tableInfo.name)/application/query\", \".java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"$!{tool.firstLowerCase($!tableInfo.name)}.application.query\")\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"QueryService\")\n\n##保存文件（宏定义）\n#save(\"/$!tool.firstLowerCase($!tableInfo.name)/application/query\", \"QueryService.java\")\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.domain.repository.$!{tableInfo.name}Repository;\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.domain.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.api.backend.dto.$!{tableInfo.name}DTO;\nimport org.springframework.stereotype.Service;\n\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.google.common.collect.Lists;\nimport lombok.extern.log4j.Log4j2;\nimport org.apache.commons.lang3.ObjectUtils;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.cache.annotation.Cacheable;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.CollectionUtils;\n\nimport com.kaadas.common.redis.RedisRepository;\nimport com.kaadas.common.utils.BeanUtils;\n\nimport javax.annotation.Resource;\nimport java.util.List;\n\n\n##表注释（宏定义）\n#tableComment(\"查询业务层\")\n@Service\npublic class $!{tableName} {\n\n    @Resource\n    private $!{tableInfo.name}Repository $!{tool.firstLowerCase($!tableInfo.name)}Repository;\n    \n    \n    /**\n     * 通过主键查询单条数据\n     */\n    public $!{tableInfo.name}DTO detail($!pk.shortType id) {\n        return $!{tool.firstLowerCase($!tableInfo.name)}Repository.getById(id);\n    }\n}\n"
      }, {
        "name" : "service-command.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n##保存文件（宏定义）\n#save(\"/$!tool.firstLowerCase($!tableInfo.name)/application/command\", \".java\")\n##包路径（宏定义）\n#setPackageSuffix(\"$!{tool.firstLowerCase($!tableInfo.name)}.application.command\")\n##设置表后缀（宏定义）\n#setTableSuffix(\"CommandService\")\n##保存文件（宏定义）\n#save(\"/$!tool.firstLowerCase($!tableInfo.name)/application/command\", \"CommandService.java\")\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.domain.repository.$!{tableInfo.name}Repository;\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.domain.$!{tableInfo.name};\nimport $!{tableInfo.savePackageName}.$!{tool.firstLowerCase($!tableInfo.name)}.api.backend.dto.$!{tableInfo.name}DTO;\nimport org.springframework.stereotype.Service;\n\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.google.common.collect.Lists;\nimport lombok.extern.log4j.Log4j2;\nimport org.apache.commons.lang3.ObjectUtils;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.cache.annotation.Cacheable;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.CollectionUtils;\n\nimport com.kaadas.common.redis.RedisRepository;\nimport com.kaadas.common.utils.BeanUtils;\n\nimport javax.annotation.Resource;\nimport java.util.List;\n\n\n##表注释（宏定义）\n#tableComment(\"指令业务层\")\n@Service\npublic class $!{tableName} {\n\n    @Resource\n    private $!{tableInfo.name}Repository $!{tool.firstLowerCase($!tableInfo.name)}Repository;\n    \n    /**\n     * 新增数据\n     */\n    public $!{tableInfo.name}DTO create($!{tableInfo.name}DTO $!{tool.firstLowerCase($tableInfo.name)}DTO){\n        $!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)} = BeanUtils.convertCopyBean($!{tool.firstLowerCase($tableInfo.name)}DTO, $!{tableInfo.name}.class);\n        $!{tool.firstLowerCase($!tableInfo.name)}Repository.save($!{tool.firstLowerCase($tableInfo.name)});\n        return BeanUtils.convertCopyBean($!{tool.firstLowerCase($tableInfo.name)}, $!{tableInfo.name}DTO.class);\n    }\n\n    /**\n     * 编辑数据\n     */\n    public $!{tableInfo.name}DTO update($!{tableInfo.name}DTO $!{tool.firstLowerCase($tableInfo.name)}DTO){\n        $!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)} = BeanUtils.convertCopyBean($!{tool.firstLowerCase($tableInfo.name)}DTO, $!{tableInfo.name}.class);\n        $!{tool.firstLowerCase($!tableInfo.name)}Repository.updateById($!{tool.firstLowerCase($tableInfo.name)});\n        return BeanUtils.convertCopyBean($!{tool.firstLowerCase($tableInfo.name)}, $!{tableInfo.name}DTO.class);\n    }\n\n    /**\n     * 删除数据\n     */\n    public Boolean delete($!pk.shortType id){\n        return $!{tool.firstLowerCase($!tableInfo.name)}Repository.removeById(id);\n    }\n}\n"
      }, {
        "name" : "vo-req.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Req\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($!tableInfo.name)/api/frontend/vo\"))\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.$!tool.firstLowerCase($!tableInfo.name).#{end}api.frontend.vo;\n\nimport java.io.Serializable;\nimport io.swagger.annotations.ApiModelProperty;\nimport io.swagger.annotations.ApiOperation;\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport java.util.Date;\n\n/**\n * @ClassName $!{tableInfo.name}Req\n * @Description\n * $!{tableInfo.name}\n * @Author $!author\n * @DATE $!time.currTime()\n * @Version 1.0\n */\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@Builder\n@ApiOperation(value = \"$!{tableInfo.name}请求参数\")\npublic class $!{tableInfo.name}Req {\n#foreach($column in $tableInfo.fullColumn)\n\n    #if(${column.comment}) \n    @ApiModelProperty(value = \"${column.comment}\")\n    #end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n}\n"
      }, {
        "name" : "vo-resp.java.vm",
        "code" : "##定义初始变量\n#set($tableName = $tool.append($tableInfo.name, \"Resp\"))\n##设置回调\n$!callback.setFileName($tool.append($tableName, \".java\"))\n$!callback.setSavePath($tool.append($tableInfo.savePath, \"/$!tool.firstLowerCase($!tableInfo.name)/api/frontend/vo\"))\n\n#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.$!tool.firstLowerCase($!tableInfo.name).#{end}api.frontend.vo;\n\nimport java.io.Serializable;\nimport io.swagger.annotations.ApiModelProperty;\nimport io.swagger.annotations.ApiOperation;\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport java.util.Date;\n\n/**\n * @ClassName $!{tableInfo.name}Resp\n * @Description\n * $!{tableInfo.name}\n * @Author $!author\n * @DATE $!time.currTime()\n * @Version 1.0\n */\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@Builder\n@ApiOperation(value = \"$!{tableInfo.name}响应参数\")\npublic class $!{tableInfo.name}Resp {\n#foreach($column in $tableInfo.fullColumn)\n\n    #if(${column.comment}) \n    @ApiModelProperty(value = \"${column.comment}\")\n    #end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n}\n"
      } ]
    }
  },
  "columnConfig" : { },
  "globalConfig" : { }
}